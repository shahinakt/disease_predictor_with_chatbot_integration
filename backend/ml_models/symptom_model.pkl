{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "main",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\nimport joblib\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.preprocessing import MultiLabelBinarizer\n",
    "\n",
    "# Load sample data (placeholder; replace with real data)\n",
    "data = pd.read_csv('../backend/data/symptoms.csv')  # Assume columns: symptoms (list), disease\n",
    "data['symptoms'] = data['symptoms'].apply(lambda x: x.split(','))  # Convert string to list\n",
    "\n",
    "# Prepare data\n",
    "mlb = MultiLabelBinarizer()\n",
    "symptoms_encoded = mlb.fit_transform(data['symptoms'])\n",
    "X = symptoms_encoded  # Features\n",
    "y = data['disease']  # Labels include mental health ones like 'depression', 'suicidal_ideation'\n",
    "\n",
    "# Split and train a toy model\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "model = RandomForestClassifier()\n",
    "model.fit(X_train, y_train)\n",
    "\n",
    "# Save the model\n",
    "joblib.dump(model, '../backend/ml_models/symptom_model.pkl')\n",
    "print('Model trained and saved as symptom_model.pkl')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.10",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}